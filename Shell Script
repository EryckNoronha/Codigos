## Curso Shell Script profissional: Do básico ao avançado - Módulo1: Comandos básicos do Shell.

> Material complementar do curso Shell Script profissional: Do básico ao avançado. Disponível no [Youtube](https://www.youtube.com/watch?v=HRRfgufskaw&list=PLLCFxfe9wkl-k0w-c_1i4sdZPUYt0Yc2P).

<img src="https://github.com/Geofisicando/Curso-Shell-Script-Profissional-mod-1/blob/master/Shell%20Script.png" width=1000>

Existem centenas de comandos no shell e cada um deles com mais uma dezena de opções.
Porém, alguns comandos são utilizados com muito mais frequência do que outros,
de modo que conhecendo apenas uma parte dos comandos disponíveis, você pode realizar a grande maioria das tarefas no seu sistema linux.

Neste módulo do curso nós iremos aprender os comandos básicos do terminal do Shell.

## Dependências

Este curso utiliza o shell Bash, acrônimo para "Bourne-Again SHell", que já vem instalado por padrão no Linux Ubuntu.

## Índice
> Este material de apoio está em manutenção, alguns recursos ainda não estão disponíveis.

## Exercícios: 
  - [Quiz 1](https://docs.google.com/forms/d/e/1FAIpQLSeRhTJ7btQdGyUAZDsmYNWl81Be-TYODKB6zBHiirLMN9XM6A/viewform?usp=sf_link)
  - [Quiz 2](https://docs.google.com/forms/d/e/1FAIpQLSfj5krskk4PfdUqodUuPoGs1pDMbdleEnGJMl8iHxfJHQmkNw/viewform?usp=sf_link)
 
 ## Introdução

   - Shell Script profissional Módulo 1 #0 - Introdução
   


## Fase 1

    Mod.1 #1 - Descobrindo o terminal
               Abrir o prompit --> Ctrl + Alt + T
               Nova aba no terminal --> Shift + Ctrl + T               
               
    Mod.1 #2 - Clear, Reset, Ctrl + L: Limpar a tela do terminal
    Mod.1 #3 - O que é shell? O que é shell script?

## Fase 2

    Mod.1 #4 - pwd: Obter o endereço do diretório atual no terminal
    Mod.1 #5 - cd: Alterar o diretório corrente no terminal
    
    Mod.1 #6 - ls: Exibir o conteúdo de um diretório no terminal
               ls -i: Exibi os inouds (numeros de registro dos documentos)
               ls *.mkv: Exibe todos os aquivos com a extenção colocada apos o ponto.
               ls -a : exibe arquivos ocultos (obs. todo arquivo que começa com ponto é um arquivo oculto)
               ls -l : exibe permições lista longa 
               
    Mod.1 #7 - echo: Exibir mensagens na tela do terminal, exibe variaveis.obs echo $eOnomeDaVariavel
               echo -e: interpreta caracteres especiais
               echo "prenchimento qualque" >> aquivo.txt : Vaicriar e adicionar o que está entre as aspas duplas no arqivo.txt
               echo "prenchimento qualque" > aquivo.txt: caso exita vai apagar e substituir
                   obs. cat + nomeArquivo.txt exibe o que tem no arquivo

## Fase 3

    Mod.1 #8 - Chmod e ls: Alterar permissões de arquivos no linux
               chmod u=rwx nomeDoArquivo.txt obs u é de usuario, g= grupo e o=outros usuarios
             Permições do arquivo na consilta ls -l
             -rw- r-- r-- r=leitira w=escrita
             drwx r-x r-x tudo e d= diretorio e x=execução 
             
    Mod.1 #9 - basename: exibe nome do arquivo
               basename + $Nome da variavel + estenção do arquivo: retira a extenção do nome do arquivo
               dirname: exibe o caminho do aquivo
    
    Mod.1 #10 - history: Exibir o histórico de comandos
                tras numero do estorico dos comandos se colocar esclamação e numero do momando ele será executado
                ex. !1996
                    !! executa o ultimo comenado executado
                history | tail -5 : ultimas cinco linhas

## Fase 4

    Mod.1 #11 - mkdir: Criar diretórios 
                mkdir -p ./teste/teste2/teste3: cria um diretório dentro do outro 
                mktemp: cria arquivos temporários por padrão no no diretorio /tmp
                
    Mod.1 #12 - Árvore de diretórios no linux e revisão dos comandos
    
    
    Mod.1 #13 - Diretórios ponto: Abreviação do diretório atual
                     ponto-ponto: Diretório acima anterior

## Fase 5

    Mod.1 #14 - touch: Criar arquivos em branco vasio e arquivos ocultos
                touch .oculto.txt: o pnto na frente do arquivo cria arquivo oculto
                nautilus . &: abrir a pasta atual e o & significa que não ficará vinculado ao terminal
                            ctrl + h: habilita ou desabilita arquuivos ocultos dentro da janela com os aqruivos fora do terminal
                gedit .oculto.txt &: vai abrir o arquivo txt com o editor de texto fora do terminal
                
    Mod.1 #15 - mv: Mover arquivos, diretórios e renomear
                mv nomeDoArquivo.txt /diretorio: moverá para o diretorio
                mv diretorio/nomearquivo.txt . : move para o diretorio atual
                mv diretorio1/ diretorio2/ : move o diretorio1 para o diretorio2 
                mv diretorio2/diretorio1 . : volta para o diretorio atual            
   
    Mod.1 #16 - cp: Copiar arquivos e diretórios
                cp nomedo arquivo.txt diretorio/seQuiserNovoNome.txt: como o arquivo para outro diretório
                cp -r diretorio/diretorio2/: copia o diretorio obs. é necessário o -r copia diretorio por inteiro
    
    
    Mod.1 #17 - cat: Concatenar e exibir o conteúdo de arquivos
                cat arquivo1.txt arquivo2.txt: exibe os dois arquivos ao mesmo tempo
                cat arquivo1.txt arquivo2.txt >> arqConcatenado.txt: junta os dois arquivos e cria um novo com as duas informações
                cat -n arquivo1.txt: exibe o arquivo com o numero de linhas
                
    Mod.1 #18 - rm: Remover arquivos e diretórios
                rm -r diretorio/: remove o diretorio mesmo não estando vasio 
                rm -i arquivo.txt: recebe a confirmação se quer remover por conta do -i
                rm -i diretorio/*:  asterico representa todo conteudo do diretório- não remove a pasta mas remove os arquivos internos.               
                

## Fase 6

    Mod.1 #19 - pipe: Direcionar saídas e entradas dos comandos no shell
               \ : corta o comando em varias linhas
               / : representa o separador dos diretórios
               obs. bc -l: exibe calculadora do teminal -l é para fazer contas decimais
               echo "2+3" | bc -l: estabeleceu relação entre comandos
               cat <nomearquivo.txt >> aquivoNovo.txt : Esta direcionando o arquivo ao comando cat e salvando
               
    Mod.1 #20 - cut: Filtrar saídas do comando cat e arquivos csv
                echo "eryck" | cur -c1: seleciona o primeiro caracter "e"
                echo "eryck" | cur -c2-4: seleciona "ryc"
                echo -e "1,2,3\n4,5,6\n7,8,9" >> matriz.csv: \n oula linha, criando um arquivo csv
                cat matriz.csv | cut -d"," -f1: -d é o delimitador e -f1 é a primeira coluna
                
             
    Mod.1 #21 - head: Exibir as primeiras linhas de arquivos
                head -n 15 nomeDoarquivo.txt: exibe as 15 primeiras linhas  
                head -n 5 arquivo1.txt arquivo2.txt : exibe cinco primeiras linhas dos sois arquivos
    
    Mod.1 #22 - tail: Exibir as últimas linhas de arquivos
                tail -n 15 nomeDoarquivo.txt: exibe as 15 ultimas linhas    
    
    Mod.1 #23 - tail -f: Monitorar arquivos com o comando tail -f obs. ctrl + c fecha o monitoramento
                obs. abre novo terminal que atualisa toda vez que insere no arquivo
                sleep 5; echo "texto inserido" >> nomeDoarquivo.txt: ponto e virgula executa dois comando ao mesmo tempo

## Fase 7

    Mod.1 #24 - seq: Exibir sequências de números e laços de repetição
                seq 0 2 10 - significa que vai iniciar com zero, vai pular de dois em dois até dez
                
    Mod.1 #25 - wc: Exibir número de linhas, palavras e caracteres de arquivo
                wc -l texto.txt: somente numero de linhas
                wc -w texto.txt: somente numero de palavras
                wc -m texto.txt: somente numero de caracteres
    
    Mod.1 #26 - tee: Gerar arquivos de log das saídas de um pipe
                echo "1,2,3" | tee log.txt | wc -> o comando tee guardou a variavel de log no arquivo log.txt e o comando rodou normal 
                obs. por padrão subescreve 
                echo "1,2,3" | tee -a log.txt | wc -> -a é a flag de append adiciona o log na ultima linha
    
    Mod.1 #27 - date (Parte 1): Exibir data e hora local em formato específico
                obs baseado no tempo UTC
                data -u mostra a hora UTC
                data -d today: data hoje
                data -d tomorrow: data amanha
                data -d yesterday: data ontem
                data -d "2 days ago": data dois dias atras
                data -d "5 weeks": cinco semanas para frente
                
                obs. outras formas de expresar as datas
                data +%d/%m/%y - o simbulo % indica que o caracter é um descritor de formato
Alguns formatos usados pelo comando:
%A : dia da semana (domingo, …, sábado).
%B : nome do mês (janeiro, …, dezembro).
%H : hora do dia (0 a 23).
%M : minuto (0 a 59).
%S : segundos (0 a 61).
%T : hora no formato hh:mm:ss.
%Y : ano.
%a : dia da semana abreviado (dom, …, sab).
%b : nome do mês abreviado (jan, …, dez).
%c : dia da semana, data e hora.
%d : dia do mês.
%j : dia ano (1 a 366).
%m : mês (1 a 12).
%s : número de segundos desde das zero horas de 01/01/1970.
%w : dia da semana, onde 0 = domingo, 1 = segunda, …, 6 = sábado.
%x : representação da data local.
%y : os dois últimos dígitos do ano    
    
    Mod.1 #28 - date (Parte 2): Mais sobre descritores de formato
                data +%d%t%m%t%Y - a letra t representa um espaço de tab
                data +%d%n%m%n%Y - a letra n representa quebra de linha
                                

## Fase 8

    Mod.1 #29 - rev: Reverter sequências de caracteres
                vi nomeArquivo.txt : abre o editor de texto no arquivo
    
    
    Mod.1 #30 - Paste: Concatenar arquivos por colunas
    Mod.1 #31 - Cal: Exibir o calendário na tela do terminal
    Mod.1 #32 - Sort (Parte 1): Organizar lista em ordem alfabética e numérica
    Mod.1 #33 - Sort (Parte 2): Organizar lista por coluna e na ordem inversa
    Mod.1 #34 - Sort (Parte 3): Organizar lista grande de arquivos por coluna

## Fase 9

    Mod.1 #35 - Xargs: Executar comandos em loop sem usar laços
    Mod.1 #36 - Sed (Parte 1): Editor de fluxo de texto do terminal
    Mod.1 #37 - Sed (Parte 2): Substituir uma string por outra
    Mod.1 #38 - Sed (Parte 3): Deletar linhas e strings de arquivo de texto

## Fase 10

    Mod.1 #39 - Grep (Parte 1): Pesquisar strings em arquivo de texto
    Mod.1 #40 - Grep (Parte 2): Exibir o contexto de pesquisa
    Mod.1 #41 - Tree: Lista hierárquica de diretórios em formato de árvore

## Fase 11

    Shell Script profissional Mod.1 #42 - Ln: Como criar links simbólicos e hardlinks em shell
    Shell Script profissional Mod.1 #43 - Utilizando links simbólicos como referência à uma biblioteca
